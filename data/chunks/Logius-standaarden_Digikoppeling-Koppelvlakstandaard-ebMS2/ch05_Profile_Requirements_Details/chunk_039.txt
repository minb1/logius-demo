
###Profile Requirement Item: Use of intermediaries

|[[EBXML-MSG]] Section 10 | All profiles:<br> **Best effort**,<br>**Reliable Messaging**,<br>**End-to-End Security** |
|------------------|---|
|Header elements||
| Are any store-and-forward intermediary MSH nodes present on the message path?  | Endpoints connecting to the Digikoppeling **must** be able to operate in Endpoint mode. They attempt to deliver inbound messages locally, and **may** treat any exceptions as failures. They are **not required** to support any forwarding of ebXML Messages to other business partners.   |
| What are the values of Retry and RetryInterval between intermediate MSH nodes? | **Not applicable**. Any Digikoppeling-level intermediaries must not support reliable messaging, in order to not interfere with end-to-end reliable message delivery. Message handlers **must not** request nextMSH receipt acknowledgments and such requests **should** be ignored by any ebXML intermediary. The ebXML intermediaries also **should not** filter duplicate messages. As with business messages, any Digikoppeling-level ebXML intermediaries **should** attempt to forward end-to-end receipts and errors.   |
| Alignment | (empty) |
| Test References | (empty) |
| Notes  |  In case **Best Effort** is used: Any Digikoppeling-level ebXML intermediary may support transport retries, for instance to handle temporary TCP or HTTP transport level errors. This is not required. In case **Reliable messaging** is used: This profile uses end-to-end reliable messaging. This allows the Digikoppeling to recover from any temporary processing failures at the level of intermediaries. Upcoming versions of the Digikoppeling **may** support store and forward ebXML intermediaries at an infrastructure level. The functionality of these intermediaries is likely be limited to fully transparent, asynchronous store-and-forward routing of ebXML Messages, with the exception of cases as described in par 4.4.1. In the default asynchronous case, no special processing is required of endpoints in the presence of any such intermediaries, as compared to direct point-to-point connections, other than supporting connection to/from the URL and client and server TLS authentication details for the intermediary rather than the “true” sender/recipient. In case **End-to-End Security** is used: see the notes for Best effort of Reliable messaging. |
